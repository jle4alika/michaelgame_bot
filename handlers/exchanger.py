from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
import keyboards.inline as kb
from aiogram.enums import ParseMode
import database.requests.get as get
import database.requests.add as add
import database.requests.minus as minus
import database.requests.others as set
from handlers.chat_types import ChatTypeFilter

router = Router()
router.message.filter(ChatTypeFilter(['private']))

@router.message(F.text == '–û–±–º–µ–Ω–Ω–∏–∫ ü§ù')
async def exchanger(message: Message):
    await message.answer('–ö–æ–≥–¥–∞ –≤—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ —Å—Ç–∞—Ä—É—é –¥–µ—Ä–µ–≤—è–Ω–Ω—É—é –¥–≤–µ—Ä—å, –ø–µ—Ä–µ–¥ –≥–ª–∞–∑–∞–º–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —É—é—Ç–Ω—ã–π –ª–µ—Å–Ω–æ–π —É–≥–æ–ª–æ–∫. '
                         '–¢—ã –≤–∏–¥–∏—à—å –∑–∞–±–∞–≤–Ω–æ–≥–æ –º–µ–¥–≤–µ–¥—è –≤ —Ñ–∞—Ä—Ç—É–∫–µ, —Å—Ç–æ—è—â–µ–≥–æ –∑–∞ –ø—Ä–∏–ª–∞–≤–∫–æ–º, –ø–æ–ª–Ω—ã–π —Å–≤–µ–∂–µ–≤—ã–ª–æ–≤–ª–µ–Ω–Ω–æ–π —Ä—ã–±—ã. '
                         '–ú–µ–¥–≤–µ–¥—å —É–ª—ã–±–∞–µ—Ç—Å—è –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –º–∞—à–µ—Ç –ª–∞–ø–æ–π, –ø—Ä–∏–≥–ª–∞—à–∞—è –ø–æ–¥–æ–π—Ç–∏.\n\n'
                         '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –æ–±–º–µ–Ω–Ω–∏–∫! –ü–æ–º–µ–Ω—è–π—Ç–µ —Å–≤–æ–∏ —à–∏—à–∫–∏ –Ω–∞ —Å–≤–µ–∂—É—é —Ä—ã–±—É —É –Ω–∞—à–µ–≥–æ —Ä—ã–∂–µ–≥–æ –º–∏—à–∫–∏! üçÇüêü', reply_markup=kb.event_exchanger)


@router.callback_query(F.data == '–û–±–º–µ–Ω–Ω–∏–∫ ü§ù')
async def process_callback_exchanger(callback: CallbackQuery):
    await callback.message.answer('–ö–æ–≥–¥–∞ –≤—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ —Å—Ç–∞—Ä—É—é –¥–µ—Ä–µ–≤—è–Ω–Ω—É—é –¥–≤–µ—Ä—å, –ø–µ—Ä–µ–¥ –≥–ª–∞–∑–∞–º–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —É—é—Ç–Ω—ã–π –ª–µ—Å–Ω–æ–π —É–≥–æ–ª–æ–∫. '
                                  '–¢—ã –≤–∏–¥–∏—à—å –∑–∞–±–∞–≤–Ω–æ–≥–æ –º–µ–¥–≤–µ–¥—è –≤ —Ñ–∞—Ä—Ç—É–∫–µ, —Å—Ç–æ—è—â–µ–≥–æ –∑–∞ –ø—Ä–∏–ª–∞–≤–∫–æ–º, –ø–æ–ª–Ω—ã–π —Å–≤–µ–∂–µ–≤—ã–ª–æ–≤–ª–µ–Ω–Ω–æ–π —Ä—ã–±—ã. '
                                  '–ú–µ–¥–≤–µ–¥—å —É–ª—ã–±–∞–µ—Ç—Å—è –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –º–∞—à–µ—Ç –ª–∞–ø–æ–π, –ø—Ä–∏–≥–ª–∞—à–∞—è –ø–æ–¥–æ–π—Ç–∏.\n\n'
                                  '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –æ–±–º–µ–Ω–Ω–∏–∫! –ü–æ–º–µ–Ω—è–π—Ç–µ —Å–≤–æ–∏ —à–∏—à–∫–∏ –Ω–∞ —Å–≤–µ–∂—É—é —Ä—ã–±—É —É –Ω–∞—à–µ–≥–æ —Ä—ã–∂–µ–≥–æ –º–∏—à–∫–∏! üçÇüêü', reply_markup=kb.event_exchanger)


@router.callback_query(F.data == '–û–±–º–µ–Ω—è—Ç—å —à–∏—à–∫–∏')
async def event_change(callback: CallbackQuery):
    money = await get.get_money(callback.from_user.id)
    await callback.message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å <b>{money}</b> üå∞\n\n'
                                  '<b>–û–±–º–µ–Ω–Ω–∏–∫ —Ä—ã–±—ã –Ω–∞ —à–∏—à–∫–∏:</b>\n\n'
                                  '- <b>1 —Ä—ã–±–∞</b> = 375,000 —à–∏—à–µ–∫\n'
                                  '- <b>3 —Ä—ã–±—ã</b> = 1,125,000 —à–∏—à–µ–∫\n'
                                  '- <b>5 —Ä—ã–±</b> = 1,875,000 —à–∏—à–µ–∫\n'
                                  '- <b>10 —Ä—ã–±</b> = 3,750,000 —à–∏—à–µ–∫\n',
                                  reply_markup=kb.event_exchanger_fish, parse_mode=ParseMode.HTML)

@router.callback_query(F.data == '1 —à—Ç')
async def event_change(callback: CallbackQuery):
    if await get.get_money(callback.from_user.id) >= 375000:
        await minus.minus_money(callback.from_user.id, 375000)
        await add.add_fish(callback.from_user.id, 1)
        await callback.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ 1 —Ä—ã–±–∫—É üåäüêü!')
    else:
        await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –æ–±–º–µ–Ω–∞.')

@router.callback_query(F.data == '3 —à—Ç')
async def event_change(callback: CallbackQuery):
    if await get.get_money(callback.from_user.id) >= 1125000:
        await minus.minus_money(callback.from_user.id, 1125000)
        await add.add_fish(callback.from_user.id, 3)
        await callback.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ 3 —Ä—ã–±–∫–∏ üåäüêü!')
    else:
        await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –æ–±–º–µ–Ω–∞.')


@router.callback_query(F.data == '5 —à—Ç')
async def event_change(callback: CallbackQuery):
    if await get.get_money(callback.from_user.id) >= 1875000:
        await minus.minus_money(callback.from_user.id, 1875000)
        await add.add_fish(callback.from_user.id, 5)
        await callback.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ 5 —Ä—ã–±–æ–∫ üåäüêü!')
    else:
        await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –æ–±–º–µ–Ω–∞.')

@router.callback_query(F.data == '10 —à—Ç')
async def event_change(callback: CallbackQuery):
    if await get.get_money(callback.from_user.id) >= 3750000:
        await minus.minus_money(callback.from_user.id, 3750000)
        await add.add_fish(callback.from_user.id, 10)
        await callback.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ 10 —Ä—ã–±–æ–∫ üåäüêü!')
    else:
        await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –æ–±–º–µ–Ω–∞.')
