from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from handlers.states import Reg
import database.requests.get as rq
import keyboards.inline as kb
from aiogram.enums import ParseMode


from handlers.chat_types import ChatTypeFilter

router = Router()
router.message.filter(ChatTypeFilter(['private']))


@router.message(F.text == '–ü—Ä–æ—Ñ–∏–ª—å üë®‚Äçüíº')
async def profile(message: Message):
    photo = await rq.get_photo_id(message.from_user.id)
    money = await rq.get_money(message.from_user.id)
    fish = await rq.get_fish(message.from_user.id)
    place = [0, 0, 0, 0]
    a = 0
    b = 0
    c = 0
    d = 0
    top_alltime_money = await rq.get_top_alltime_money()
    top_money = await rq.get_top_money()
    top_referrals = await rq.get_top_referrals()
    top_fish = await rq.get_top_fish()
    for item in top_alltime_money:
        a += 1
        if item == message.from_user.id:
            place[0] = a

    for item in top_money:
        b += 1
        if item == message.from_user.id:
            place[1] = b

    for item in top_referrals:
        c += 1
        if item == message.from_user.id:
            place[2] = c

    for item in top_fish:
        d += 1
        if item == message.from_user.id:
            place[3] = d

    if len(photo) > 0:
        await message.answer_photo(
            photo=photo,
            caption=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {await rq.get_user_nickname(message.from_user.id)}\n\n'
                    f'–í–∞—à –±–∞–ª–∞–Ω—Å: <b>{money}</b> —à–∏—à–µ–∫ üå∞!\n\n'
                    f'<b>–í–∞—à–∞ —Ä—ã–±–∞:</b> {fish} üêü\n'
                    f'–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è —à–∏—à–µ–∫ üå∞:<b>{await rq.get_money_chance(message.from_user.id)}%</b>'
                    f'\n–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –±—É—Å—Ç–æ–≤ üîã:<b>{await rq.get_boost_chance(message.from_user.id)}%</b>'
                    f'\n\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[0]}</b> –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º—É –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è! üí∏'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[1]}</b> –ø–æ –¥–µ–Ω—å–≥–∞–º! üî•'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[2]}</b> –ø–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º! üë®‚Äçüíº'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[3]}</b> –ø–æ –≤—ã–ª–æ–≤–ª–µ–Ω–Ω–æ–π —Ä—ã–±–µ! üêü',
            reply_markup=kb.profile, parse_mode=ParseMode.HTML)
    else:
        await message.answer_photo(
            photo='AgACAgIAAxkBAAJY_mZ0Shb6-gEJ0gvWTCotNMX5wLi0AAIt4DEbfl2oS2pMPLmZ_5PCAQADAgADeQADNQQ',
            caption=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {await rq.get_user_nickname(message.from_user.id)}\n\n'
                    f'–í–∞—à –±–∞–ª–∞–Ω—Å: {money} —à–∏—à–µ–∫ üå∞!\n\n'
                    f'<b>–í–∞—à–∞ —Ä—ã–±–∞:</b> {fish} üêü\n'
                    f'–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è —à–∏—à–µ–∫ üå∞:{await rq.get_money_chance(message.from_user.id)}%'
                    f'\n–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –±—É—Å—Ç–æ–≤ üîã:{await rq.get_boost_chance(message.from_user.id)}%'
                    f'\n\n–£ –≤–∞—Å —Ç–æ–ø {place[0]} –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º—É –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è! üí∏'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø {place[1]} –ø–æ –¥–µ–Ω—å–≥–∞–º! üî•'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø {place[2]} –ø–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º! üë®‚Äçüíº'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[3]}</b> –ø–æ –≤—ã–ª–æ–≤–ª–µ–Ω–Ω–æ–π —Ä—ã–±–µ! üêü',
            reply_markup=kb.profile, parse_mode=ParseMode.HTML)


@router.callback_query(F.data == '–ü—Ä–æ—Ñ–∏–ª—å üë®‚Äçüíº')
async def callback_profile(callback: CallbackQuery):
    photo = await rq.get_photo_id(callback.from_user.id)
    money = await rq.get_money(callback.from_user.id)
    fish = await rq.get_fish(callback.from_user.id)
    place = [0, 0, 0, 0]
    a = 0
    b = 0
    c = 0
    d = 0
    top_alltime_money = await rq.get_top_alltime_money()
    top_money = await rq.get_top_money()
    top_referrals = await rq.get_top_referrals()
    top_fish = await rq.get_top_fish()
    for item in top_alltime_money:
        a += 1
        if item == callback.from_user.id:
            place[0] = a

    for item in top_money:
        b += 1
        if item == callback.from_user.id:
            place[1] = b

    for item in top_referrals:
        c += 1
        if item == callback.from_user.id:
            place[2] = c
    for item in top_fish:
        d += 1
        if item == callback.from_user.id:
            place[3] = d
    if len(photo) > 0:
        await callback.message.answer_photo(
            photo=photo,
            caption=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {await rq.get_user_nickname(callback.from_user.id)}\n\n'
                    f'–í–∞—à –±–∞–ª–∞–Ω—Å: <b>{money}</b> —à–∏—à–µ–∫ üå∞!\n\n'
                    f'<b>–í–∞—à–∞ —Ä—ã–±–∞:</b> {fish} üêü\n'
                    f'–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è —à–∏—à–µ–∫ üå∞:<b>{await rq.get_money_chance(callback.from_user.id)}%</b>'
                    f'\n–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –±—É—Å—Ç–æ–≤ üîã:<b>{await rq.get_boost_chance(callback.from_user.id)}%</b>'
                    f'\n\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[0]}</b> –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º—É –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è! üí∏'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[1]}</b> –ø–æ –¥–µ–Ω—å–≥–∞–º! üî•'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[2]}</b> –ø–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º! üë®‚Äçüíº'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[3]}</b> –ø–æ –≤—ã–ª–æ–≤–ª–µ–Ω–Ω–æ–π —Ä—ã–±–µ! üêü',
            reply_markup=kb.profile, parse_mode=ParseMode.HTML)
    else:
        await callback.message.answer_photo(
            photo='AgACAgIAAxkBAAJY_mZ0Shb6-gEJ0gvWTCotNMX5wLi0AAIt4DEbfl2oS2pMPLmZ_5PCAQADAgADeQADNQQ',
            caption=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {await rq.get_user_nickname(callback.from_user.id)}\n\n'
                    f'–í–∞—à –±–∞–ª–∞–Ω—Å: <b>{money}</b> —à–∏—à–µ–∫ üå∞!\n\n'
                    f'<b>–í–∞—à–∞ —Ä—ã–±–∞:</b> {fish} üêü\n'
                    f'–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è —à–∏—à–µ–∫ üå∞:<b>{await rq.get_money_chance(callback.from_user.id)}%</b>'
                    f'\n–í–∞—à —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –±—É—Å—Ç–æ–≤ üîã:<b>{await rq.get_boost_chance(callback.from_user.id)}%</b>'
                    f'\n\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[0]}</b> –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º—É –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è! üí∏'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[1]}</b> –ø–æ –¥–µ–Ω—å–≥–∞–º! üî•'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[2]}</b> –ø–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º! üë®‚Äçüíº'
                    f'\n–£ –≤–∞—Å —Ç–æ–ø <b>{place[3]}</b> –ø–æ –≤—ã–ª–æ–≤–ª–µ–Ω–Ω–æ–π —Ä—ã–±–µ! üêü',
            reply_markup=kb.profile, parse_mode=ParseMode.HTML)



@router.callback_query(F.data == '–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è üñº')
async def process_callback_reg1(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–æ–µ —Ñ–æ—Ç–æ')
    await state.set_state(Reg.photo_id)


@router.callback_query(F.data == '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º üòé')
async def set_nickname(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º:')
    await state.set_state(Reg.nickname)