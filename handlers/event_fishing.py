from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ParseMode

import asyncio
import database.requests.get as get
import database.requests.add as add
import database.requests.minus as minus
import database.requests.others as set
import keyboards.inline as kb
import random

from handlers.chat_types import ChatTypeFilter

router = Router()
router.message.filter(ChatTypeFilter(['private']))

@router.message(F.text == '–†—ã–±–∞—Ü–∫–∞—è –±—É—Ö—Ç–∞ ‚öì')
async def event_main(message: Message):
    await message.answer_photo(photo='AgACAgIAAxkBAAJlPGab8g_mkzx8nALZZWcbn70J7MT6AAJs9zEbw_HgSP0eMYPk5dX_AQADAgADeAADNQQ',
                               caption='–ü—Ä–∏–≤–µ—Ç, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ó–¥–µ—Å—å –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ. –ö—É–¥–∞ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è?\n\n'
                                       '1. <b>–ú–µ–¥–≤–µ–¥—å</b> ‚Äì –ú–µ—Å—Ç–æ —Å–∏–ª—ã –º–µ–¥–≤–µ–¥—è –¥–ª—è –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç–æ–≤.\n'
                                       '2. <b>–ö—Ä–∞–∂–∞!</b> ‚Äì –ù–∞—Å—Ç–æ—è—â–∞—è –∞–≤–∞–Ω—Ç—é—Ä–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç –ø–æ—à–∞–ª–∏—Ç—å.\n'
                                       '3. <b>–†—ã–±–∞—á–∏—Ç—å</b> ‚Äì –ò–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ.\n'
                                       '4. <b>–†—ã–±–æ–ª–æ–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω</b> ‚Äì –û–±–Ω–æ–≤–∏ —Å–≤–æ—ë —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –ª—É—á—à–∏–º–∏ –Ω–æ–≤–∏–Ω–∫–∞–º–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ä—ã–±–∞–ª–∫–∏.\n\n'
                                       '–í—ã–±–∏—Ä–∞–π —Å–≤–æ—ë –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –∏ –≤–ø–µ—Ä–µ–¥! üé£üö£‚Äç‚ôÇÔ∏èüïµÔ∏è‚Äç‚ôÇÔ∏è',
                               reply_markup=kb.event_main,
                               parse_mode=ParseMode.HTML)
    await set.set_user_event(message.from_user.id)

@router.callback_query(F.data == '–†—ã–±–∞—á–∏—Ç—å')
async def event_main(callback: CallbackQuery):
    chance = await get.get_fishing_chance(callback.from_user.id)
    if random.randint(0, 100) <= chance:
        await add.add_fish(callback.from_user.id, 1)
        fish = await get.get_fish(callback.from_user.id)
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAJlPGab8g_mkzx8nALZZWcbn70J7MT6AAJs9zEbw_HgSP0eMYPk5dX_AQADAgADeAADNQQ',
                                            caption='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –ø–æ–π–º–∞–ª —Å–≤–æ—é —Ä—ã–±–∫—É! üêü –≠—Ç–æ\n'
                                                    '–≤–ø–µ—á–∞—Ç–ª—è—é—â–µ–µ –Ω–∞—á–∞–ª–æ —Ç–≤–æ–µ–≥–æ —Ä—ã–±–æ–ª–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è.\n'
                                                    '–ù–µ–≤–∞–∂–Ω–æ, –±–æ–ª—å—à–∞—è –æ–Ω–∞ –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫–∞—è, —Å–µ–π—á–∞—Å —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å,\n'
                                                    '—á—Ç–æ —É—Å–∏–ª–∏—è –æ–∫—É–ø–∞—é—Ç—Å—è. –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ, —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–π \n'
                                                    '—Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏, –∏, –∫—Ç–æ –∑–Ω–∞–µ—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, —Å–ª–µ–¥—É—é—â–∞—è —Ä—ã–±–∞–ª–∫–∞\n'
                                                    '–ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ –µ—â—ë –±–æ–ª—å—à–∏–π —É–ª–æ–≤. –î–µ—Ä–∑–∞–π! üé£üöÄ'
                                                    f'–í–∞—à–∞ —Ä—ã–±–∞: {fish}',
                                            reply_markup=kb.event_fishing)
    else:
        await callback.message.answer_photo(photo='AgACAgIAAxkBAAJlPGab8g_mkzx8nALZZWcbn70J7MT6AAJs9zEbw_HgSP0eMYPk5dX_AQADAgADeAADNQQ',
                                            caption='–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è —É–ª–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è! üêü –†—ã–±–∞–ª–∫–∞ ‚Äì —ç—Ç–æ \n'
                                                    '–Ω–µ —Ç–æ–ª—å–∫–æ –æ —Ä—ã–±–µ, –Ω–æ –∏ –æ –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–º –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ, –æ\n'
                                                    '—Ç–∏—à–∏–Ω–µ –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–∏. –≠—Ç–æ —à–∞–Ω—Å –Ω–∞—É—á–∏—Ç—å—Å—è —Ç–µ—Ä–ø–µ–Ω–∏—é –∏\n'
                                                    '—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏. –ö–∞–∂–¥—ã–π –Ω–µ—É–¥–∞–≤—à–∏–π—Å—è –∑–∞–±—Ä–æ—Å\n'
                                                    '–ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ –º–æ–º–µ–Ω—Ç—É, –∫–æ–≥–¥–∞ –∫–ª—ë–≤ –ø–æ–π–¥—ë—Ç –∫–∞–∫ –ø–æ –º–∞—Å–ª—É.\n'
                                                    '–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è, –∏ —Ç–≤–æ–π —É–ª–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥–µ—Ç! üé£üí™\n',
                                            reply_markup=kb.event_fishing)


@router.callback_query(F.data == '–†—ã–±–æ–ª–æ–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω')
async def event_main(callback: CallbackQuery):
    fishing_chance = await get.get_fishing_chance(callback.from_user.id)
    fishing1 = await get.get_fishing1(callback.from_user.id)
    fishing2 = await get.get_fishing2(callback.from_user.id)
    fishing3 = await get.get_fishing3(callback.from_user.id)
    await callback.message.answer_photo(photo='AgACAgIAAxkBAAJlQWab9cERsvVGGqDJebtGQ_NTq4QWAAJ94jEbFTjhSBhK0SvxZ5feAQADAgADeQADNQQ',
                                        caption='–ö–∞–∫ —è –≤–∏–∂—É —Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å–µ—Ä—å—ë–∑–Ω–æ. –í–æ—Ç —Ç–µ–±–µ –Ω–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, –≤—ã–±–∏—Ä–∞–π –≤—Å—ë –ø–æ –æ—á–µ—Ä–µ–¥–∏!\n\n'
                                                '‚Ä¢ –û–±–Ω–æ–≤–∫–∞ üé£! \n–ù–æ–≤–∞—è —É–¥–æ—á–∫–∞ –ø–æ–¥–Ω–∏–º–∞–µ—Ç —à–∞–Ω—Å—ã —Ç–æ 10% (–°—Ç–æ–∏–º–æ—Å—Ç—å 5 —Ä—ã–± –∏ 150—Ç—ã—Å —à–∏—à–µ–∫)\n'
                                                '‚Ä¢ –í–∫—É—Å–Ω–æ—Ç–∏—â–∞ üêõ! \n–ù–æ–≤–∞—è –ø—Ä–∏–º–∞–Ω–∫–∞ –ø–æ–¥–Ω–∏–º–∞–µ—Ç —à–∞–Ω—Å—ã –ª–æ–≤–ª–∏ –¥–æ 15% (–°—Ç–æ–∏–º–æ—Å—Ç—å 15 —Ä—ã–± –∏ 250 —Ç—ã—Å —à–∏—à–µ–∫)\n'
                                                '‚Ä¢ –ü–æ —Ç–µ—á–µ–Ω–∏—é –≤–≤–µ—Ä—Ö üåä! \n–ù–æ–≤–∞—è –Ω–∞–¥—É–≤–Ω–∞—è –ª–æ–¥–∫–∞ –¥–ª—è –ª–æ–≤–ª–∏, –ø–æ–¥–Ω–∏–º–∞–µ—Ç —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –¥–æ 20%. (–°—Ç–æ–∏–º–æ—Å—Ç—å 25 —Ä—ã–± –∏ 350 —Ç—ã—Å —à–∏—à–µ–∫)\n'
                                                f'–í–∞—à —à–∞–Ω—Å –ø–æ–∏–º–∫–∏ —Ä—ã–±—ã: {fishing_chance}%',
                                        reply_markup=kb.event_fishing_shop)

@router.callback_query(F.data == '–û–±–Ω–æ–≤–∫–∞!')
async def event_new(callback: CallbackQuery):
    if await get.get_fishing1(callback.from_user.id) == 0:
        if await get.get_money(callback.from_user.id) >= 150000:
            if await get.get_fish(callback.from_user.id) >= 5:
                await minus.minus_money(callback.from_user.id, 150000)
                await minus.minus_fish(callback.from_user.id, 5)
                await add.update_fishing_chance(callback.from_user.id, 10)
                await add.update_fishing1(callback.from_user.id)
                await callback.message.answer_photo(photo='AgACAgIAAxkBAAJlRmacASyxSbutWudBN_8AATgmCPrh5gACe94xGzSQ4UgGHNQjoZGLKgEAAwIAA3gAAzUE',
                                                    caption='–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –Ω–æ–≤—É—é —É–¥–æ—á–∫—É üé£ –∏ –ø–æ–≤—ã—Å–∏–ª–∏ –≤–∞—à–∏ —à–∞–Ω—Å—ã –¥–æ 10%!\n–° –æ–±–Ω–æ–≤–∫–æ–π!',
                                                    reply_markup=kb.event_fishing_shop)
            else:
                await callback.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–± –¥–ª—è –æ–ø–ª–∞—Ç—ã.', show_alert=True)
        else:
            await callback.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —à–∏—à–µ–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã.', show_alert=True)
    else:
        await callback.answer('–í—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø–µ—Ä–≤–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ.', show_alert=True)

@router.callback_query(F.data == '–í–∫—É—Å–Ω–æ—Ç–∏—â–∞!')
async def event_delicious(callback: CallbackQuery):
    if await get.get_fishing1(callback.from_user.id) == 1:
        if await get.get_fishing2(callback.from_user.id) == 0:
            if await get.get_money(callback.from_user.id) >= 250000:
                if await get.get_fish(callback.from_user.id) >= 15:
                    await minus.minus_money(callback.from_user.id, 250000)
                    await minus.minus_fish(callback.from_user.id, 15)
                    await add.update_fishing_chance(callback.from_user.id, 15)
                    await add.update_fishing2(callback.from_user.id)
                    await callback.message.answer_photo(photo='AgACAgIAAxkBAAJlS2acAWFpifz9K5rZd-FCyD_1c7BfAALC4jEbFTjhSCaVhCiBV_zDAQADAgADeAADNQQ',
                                                        caption='–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –Ω–æ–≤—É—é –ø—Ä–∏–º–∞–Ω–∫—É üêõ –∏ –ø–æ–≤—ã—Å–∏–ª–∏ –≤–∞—à–∏ —à–∞–Ω—Å—ã –¥–æ 15%!\n–° –æ–±–Ω–æ–≤–∫–æ–π!',
                                                        reply_markup=kb.event_fishing_shop)
                else:
                    await callback.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–± –¥–ª—è –æ–ø–ª–∞—Ç—ã.', show_alert=True)
            else:
                await callback.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —à–∏—à–µ–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã.', show_alert=True)
        else:
            await callback.answer('–í—ã —É–∂–µ –ø—Ä–æ–±—Ä–µ–ª–∏ –ø—Ä–∏–º–∞–Ω–∫—É!', show_alert=True)
    else:
        await callback.answer('–í—ã –Ω–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —É–¥–æ—á–∫—É!', show_alert=True)

@router.callback_query(F.data == '–ü–æ —Ç–µ—á–µ–Ω–∏—é –≤–≤–µ—Ä—Ö!')
async def event_up(callback: CallbackQuery):
    if await get.get_fishing2(callback.from_user.id) == 1:
        if await get.get_fishing3(callback.from_user.id) == 0:
            if await get.get_money(callback.from_user.id) >= 350000:
                if await get.get_fish(callback.from_user.id) >= 25:
                    await minus.minus_money(callback.from_user.id, 350000)
                    await minus.minus_fish(callback.from_user.id, 25)
                    await add.update_fishing_chance(callback.from_user.id, 20)
                    await add.update_fishing3(callback.from_user.id)
                    await callback.message.answer_photo(photo='AgACAgIAAxkBAAJlUGacAYi-Mz_it1dSAqPaMfc2vGSPAALR4jEbFTjhSHCx5B7X_M9NAQADAgADeQADNQQ',
                                                        caption='–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –Ω–æ–≤—É—é –ª–æ–¥–∫—É üåä –∏ –ø–æ–≤—ã—Å–∏–ª–∏ –≤–∞—à–∏ —à–∞–Ω—Å—ã –¥–æ 20%!\n–° –æ–±–Ω–æ–≤–∫–æ–π!',
                                                        reply_markup=kb.event_fishing_shop)
                else:
                    await callback.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–± –¥–ª—è –æ–ø–ª–∞—Ç—ã.', show_alert=True)
            else:
                await callback.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —à–∏—à–µ–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã.', show_alert=True)
        else:
            await callback.answer('–í—ã —É–∂–µ –ø—Ä–æ–±—Ä–µ–ª–∏ –ª–æ–¥–∫—É!', show_alert=True)
    else:
        await callback.answer('–í—ã –Ω–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø—Ä–∏–º–∞–Ω–∫—É!', show_alert=True)


@router.callback_query(F.data == '–ú–µ–¥–≤–µ–¥—å')
async def bear(callback: CallbackQuery):
    bear_power = await get.get_bear_power(callback.from_user.id)
    bear_protection = await get.get_bear_protection(callback.from_user.id)
    fish = await get.get_fish(callback.from_user.id)
    await callback.message.answer_photo(photo='AgACAgIAAxkBAAJlimac7Hwm5y9OC6EWS3NQ1dTaB_RRAAKv3jEbU5TpSGcaUwbbMBcrAQADAgADeAADNQQ',
                                        caption=
                                        '–ú–µ–¥–≤–µ–∂–∏–π —É–≥–æ–ª üêª\n\n'
                                        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±–∏—Ç–µ–ª—å –º–æ–≥—É—á–µ–≥–æ –º–µ–¥–≤–µ–¥—è! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É—Å–∏–ª–∏—Ç—å —Å–≤–æ–µ–≥–æ –∫–æ—Å–æ–ª–∞–ø–æ–≥–æ –¥—Ä—É–≥–∞ –∏ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –Ω–µ–ø–æ–±–µ–¥–∏–º—ã–º.\n\n'
                                        '---\n\n'
                                        f'<b>–í–∞—à–∞ —Ä—ã–±–∞:</b> {fish}\n'
                                        f'<b>–°–∏–ª–∞ –∞—Ç–∞–∫–∏:</b> {bear_power}\n'
                                        f'<b>–ó–∞—â–∏—Ç–∞:</b> {bear_protection}\n\n'
                                        '---\n\n'
                                        '–ë–µ—Ä–µ–≥–∏ —Å–≤–æ–µ–≥–æ –º–æ–≥—É—á–µ–≥–æ –º–µ–¥–≤–µ–¥—è –∏ —É–ª—É—á—à–∞–π –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ –ø–æ–∫–æ—Ä—è—Ç—å –Ω–æ–≤—ã–µ –≤–µ—Ä—à–∏–Ω—ã!',
                                        reply_markup=kb.event_bear,
                                        parse_mode=ParseMode.HTML)


@router.callback_query(F.data == '–ü–æ–≤—ã—Å–∏—Ç—å —Å–∏–ª—É –∞—Ç–∞–∫–∏ –º–µ–¥–≤–µ–¥—è')
async def bear(callback: CallbackQuery):
    await callback.message.edit_reply_markup(reply_markup=kb.event_up_power)


@router.callback_query(F.data == '–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞—â–∏—Ç—É –º–µ–¥–≤–µ–¥—è')
async def bear(callback: CallbackQuery):
    await callback.message.edit_reply_markup(reply_markup=kb.event_up_protection)

@router.callback_query(F.data == '1 power')
async def event_change(callback: CallbackQuery):
    bear_power = await get.get_bear_power(callback.from_user.id)
    if bear_power < 100:
        if await get.get_fish(callback.from_user.id) >= 1:
            await minus.minus_fish(callback.from_user.id, 1)
            await add.add_bear_power(callback.from_user.id, 1)
            bear_power = await get.get_bear_power(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ —Å–∏–ª—É –∞—Ç–∞–∫–∏ –Ω–∞ 1%!\n–°–∏–ª–∞ –∞—Ç–∞–∫–∏ –º–µ–¥–≤–µ–¥—è: {bear_power}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å —Å–∏–ª—É –∞—Ç–∞–∫–∏ –≤—ã—à–µ 100%.')

@router.callback_query(F.data == '3 power')
async def event_change(callback: CallbackQuery):
    bear_power = await get.get_bear_power(callback.from_user.id)
    if bear_power < 98:
        if await get.get_fish(callback.from_user.id) >= 3:
            await minus.minus_fish(callback.from_user.id, 3)
            await add.add_bear_power(callback.from_user.id, 3)
            bear_power = await get.get_bear_power(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ —Å–∏–ª—É –∞—Ç–∞–∫–∏ –Ω–∞ 3%!\n–°–∏–ª–∞ –∞—Ç–∞–∫–∏ –º–µ–¥–≤–µ–¥—è: {bear_power}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å —Å–∏–ª—É –∞—Ç–∞–∫–∏ –≤—ã—à–µ 100%.')


@router.callback_query(F.data == '5 power')
async def event_change(callback: CallbackQuery):
    bear_power = await get.get_bear_power(callback.from_user.id)
    if bear_power < 96:
        if await get.get_fish(callback.from_user.id) >= 5:
            await minus.minus_fish(callback.from_user.id, 5)
            await add.add_bear_power(callback.from_user.id, 5)
            bear_power = await get.get_bear_power(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ —Å–∏–ª—É –∞—Ç–∞–∫–∏ –Ω–∞ 5%!\n–°–∏–ª–∞ –∞—Ç–∞–∫–∏ –º–µ–¥–≤–µ–¥—è: {bear_power}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å —Å–∏–ª—É –∞—Ç–∞–∫–∏ –≤—ã—à–µ 100%.')

@router.callback_query(F.data == '10 power')
async def event_change(callback: CallbackQuery):
    bear_power = await get.get_bear_power(callback.from_user.id)
    if bear_power < 91:
        if await get.get_fish(callback.from_user.id) >= 10:
            await minus.minus_fish(callback.from_user.id, 10)
            await add.add_bear_power(callback.from_user.id, 10)
            bear_power = await get.get_bear_power(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ —Å–∏–ª—É –∞—Ç–∞–∫–∏ –Ω–∞ 10%!\n–°–∏–ª–∞ –∞—Ç–∞–∫–∏ –º–µ–¥–≤–µ–¥—è: {bear_power}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å —Å–∏–ª—É –∞—Ç–∞–∫–∏ –≤—ã—à–µ 100%.')

@router.callback_query(F.data == '1 protection')
async def event_change(callback: CallbackQuery):
    bear_protection = await get.get_bear_protection(callback.from_user.id)
    if bear_protection < 79:
        if await get.get_fish(callback.from_user.id) >= 1:
            await minus.minus_fish(callback.from_user.id, 1)
            await add.add_bear_protection(callback.from_user.id, 1)
            bear_protection = await get.get_bear_protection(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ –∑–∞—â–∏—Ç—É –Ω–∞ 1%!\n –ó–∞—â–∏—Ç–∞: {bear_protection}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å –∑–∞—â–∏—Ç—É –≤—ã—à–µ 80%.')

@router.callback_query(F.data == '3 protection')
async def event_change(callback: CallbackQuery):
    bear_protection = await get.get_bear_protection(callback.from_user.id)
    if bear_protection < 78:
        if await get.get_fish(callback.from_user.id) >= 3:
            await minus.minus_fish(callback.from_user.id, 3)
            await add.add_bear_protection(callback.from_user.id, 3)
            bear_protection = await get.get_bear_protection(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ –∑–∞—â–∏—Ç—É –Ω–∞ 3%!\n –ó–∞—â–∏—Ç–∞: {bear_protection}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å –∑–∞—â–∏—Ç—É –≤—ã—à–µ 80%.')


@router.callback_query(F.data == '5 protection')
async def event_change(callback: CallbackQuery):
    bear_protection = await get.get_bear_protection(callback.from_user.id)
    if bear_protection < 76:
        if await get.get_fish(callback.from_user.id) >= 5:
            await minus.minus_fish(callback.from_user.id, 5)
            await add.add_bear_protection(callback.from_user.id, 5)
            bear_protection = await get.get_bear_protection(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ –∑–∞—â–∏—Ç—É –Ω–∞ 5%!\n –ó–∞—â–∏—Ç–∞: {bear_protection}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å –∑–∞—â–∏—Ç—É –≤—ã—à–µ 80%.')

@router.callback_query(F.data == '10 protection')
async def event_change(callback: CallbackQuery):
    bear_protection = await get.get_bear_protection(callback.from_user.id)
    if bear_protection < 71:
        if await get.get_fish(callback.from_user.id) >= 10:
            await minus.minus_fish(callback.from_user.id, 10)
            await add.add_bear_protection(callback.from_user.id, 10)
            bear_protection = await get.get_bear_protection(callback.from_user.id)
            await callback.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–Ω—è–ª–∏ –∑–∞—â–∏—Ç—É –Ω–∞ 10%!\n –ó–∞—â–∏—Ç–∞: {bear_protection}')
        else:
            await callback.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—ã–±—ã –¥–ª—è –æ–±–º–µ–Ω–∞.')
    else:
        await callback.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–Ω—è—Ç—å –∑–∞—â–∏—Ç—É –≤—ã—à–µ 80%.')


@router.callback_query(F.data == 'bear_back')
async def event_change(callback: CallbackQuery):
    bear_power = await get.get_bear_power(callback.from_user.id)
    bear_protection = await get.get_bear_protection(callback.from_user.id)
    fish = await get.get_fish(callback.from_user.id)
    await callback.message.edit_caption(caption=
                                        '–ú–µ–¥–≤–µ–∂–∏–π —É–≥–æ–ª üêª\n\n'
                                        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±–∏—Ç–µ–ª—å –º–æ–≥—É—á–µ–≥–æ –º–µ–¥–≤–µ–¥—è! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É—Å–∏–ª–∏—Ç—å —Å–≤–æ–µ–≥–æ –∫–æ—Å–æ–ª–∞–ø–æ–≥–æ –¥—Ä—É–≥–∞ –∏ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –Ω–µ–ø–æ–±–µ–¥–∏–º—ã–º.\n\n'
                                        '---\n\n'
                                        f'<b>–í–∞—à–∞ —Ä—ã–±–∞:</b> {fish} üêü\n'
                                        f'<b>–°–∏–ª–∞ –∞—Ç–∞–∫–∏:</b> {bear_power}\n'
                                        f'<b>–ó–∞—â–∏—Ç–∞:</b> {bear_protection}\n\n'
                                        '---\n\n'
                                        '–ë–µ—Ä–µ–≥–∏ —Å–≤–æ–µ–≥–æ –º–æ–≥—É—á–µ–≥–æ –º–µ–¥–≤–µ–¥—è –∏ —É–ª—É—á—à–∞–π –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ –ø–æ–∫–æ—Ä—è—Ç—å –Ω–æ–≤—ã–µ –≤–µ—Ä—à–∏–Ω—ã!',
                                        reply_markup=kb.event_bear,
                                        parse_mode=ParseMode.HTML)
